/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include "swe_keys.h"

#define DEFAULT     0
#define SYMBOLS_SWE 1
#define FUNC        2
#define NUMBER      3
#define SETTINGS    4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_mods_slow {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SLOW";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LEFT_ALT>, <&kp LGUI>;
        };
    };
    cond_layers {
        compatible = "zmk,conditional-layers";
        // Define SETTINGS layer as tri-state
        func_tristate {
            if-layers = <NUMBER FUNC>;
            then-layer = <SETTINGS>;
        };
    };

/*           40 Keys
╭─────────────────╮ ╭─────────────────╮
│    0  1  2  3  4│ │ 5  6  7  8  9   │
│10 11 12 13 14 15│ │16 17 18 19 20 21│
│22 23 24 25 26 27│ │28 29 30 31 32 33│
╰────────╮34 35 36│ │37 38 39╭────────╯
         ╰────────╯ ╰────────╯       */
/*    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    }; */

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp W       &kp W       &kp F       &kp P           &kp B       &kp J     &kp L         &kp U       &kp Y       &kp SE_AE
     &kp LSHIFT &kp A       &kp R       &kp S       &kp T           &kp G       &kp M     &kp N         &kp E       &kp I       &kp O       &kp SE_AA
     &kp LCTRL  &kp Z       &kp X       &kp C       &kp D           &kp V       &kp K     &kp H         &kp COMMA   &kp DOT     &kp SE_OO   &kp ENTER
                                        &td0  &lt SYMBOLS_SWE TAB  &kp SPACE    &kp BSPC  &lt NUMBER DEL &lt FUNC ESC
            >;
        };

        symbols_swe_layer {
            bindings = <
                &kp SE_DQT      &kp SE_AT       &kp SE_EXCL     &kp SE_PLUS   &kp SE_BSLH   &kp SE_LPAR   &kp SE_RPAR   &kp SE_UNDER    &kp SE_QMARK    &none
     &trans     &kp SE_SQT      &kp SE_AMPS     &kp SE_STAR     &kp SE_GRAVE  &kp SE_LBKT   &kp SE_MINUS  &kp SE_TILDE  &kp SE_EQUAL    &kp SE_PIPE     &kp SE_FSLH &none
     &trans     &kp SE_PRCNT    &kp SE_HASH     &kp SE_CARET    &kp SE_DLLR   &kp SE_RBKT   &kp SE_LBRC   &kp SE_RBRC   &kp SE_LT       &kp SE_GT       &none       &none
                                                                &kp PSCRN  &trans  &trans   &trans        &kp DEL       &trans
            >;
        };

        func_layer {
            bindings = <
            &none     &kp F1  &kp F2   &kp F3   &kp F4     &kp HOME   &kp PG_UP      &kp UP       &kp PG_DN   &kp DEL
     &trans &none     &kp F5  &kp F6   &kp F7   &kp F8     &kp END    &kp LEFT       &kp DOWN     &kp RIGHT   &none         &kp C_VOL_UP
     &trans &kp CAPS  &kp F9  &kp F10  &kp F11  &kp F12    &none      &kp C_PREV     &kp C_PP     &kp C_NEXT  &kp K_MUTE    &kp C_VOL_DN
                                &trans  &trans   &trans    &trans     &trans         &trans
            >;
        };

        number_layer {
            bindings = <
                &kp N1      &kp N2      &kp N3      &kp N4      &kp N5              &kp N6          &kp N7      &kp N8      &kp N9      &kp N0
     &trans     &kp N6      &kp N7      &kp N8      &kp N9      &kp N0              &kp SE_MINUS    &kp N4      &kp N5      &kp N6      &kp SE_PLUS     &none
     &trans     &none       &none       &none       &none       &kp SE_EQUAL        &kp N0          &kp N1      &kp N2      &kp N3      &kp COMMA       &kp DOT
                                             &trans  &trans      &trans             &trans          &trans      &trans
            >;
        };

        settings_layer {
            bindings = <
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4   &ext_power EP_ON  &ext_power EP_OFF    &none  &none       &none
     &trans     &bt BT_CLR    &none         &none           &none         &none          &none             &to DEFAULT          &none  &none       &none    &none
     &trans     &out OUT_BLE  &out OUT_USB  &none           &none         &bootloader    &bootloader       &none                &none  &none       &trans   &none
                                            &none           &trans        &trans         &trans            &trans               &none
            >;
        };
    };
};

